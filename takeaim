import pygame
import sys
import random

# Инициализация Pygame
pygame.init()

# Параметры окна
WIDTH, HEIGHT = 600, 400
FPS = 60

# Цвета
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Настройки игры
player_size = 20
field_size = WIDTH
field_speed = 2.5
square_speed = 3
score = 0
game_duration = 90
start_time = pygame.time.get_ticks()

# Инициализация окна
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Take Aim")
clock = pygame.time.Clock()

# Главная функция игры
def take_aim_game():
    global field_size, player_size, score, game_duration, start_time

    player_pos = [WIDTH // 2, HEIGHT // 2]
    square_pos = [random.randint(0, WIDTH - player_size), random.randint(0, HEIGHT - player_size)]

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        keys = pygame.key.get_pressed()
        player_pos[0] += (keys[pygame.K_RIGHT] - keys[pygame.K_LEFT]) * square_speed
        player_pos[1] += (keys[pygame.K_DOWN] - keys[pygame.K_UP]) * square_speed

        # Ограничиваем позицию игрока в пределах окна
        player_pos[0] = max(0, min(player_pos[0], WIDTH - player_size))
        player_pos[1] = max(0, min(player_pos[1], HEIGHT - player_size))

        # Движение квадрата в рандомном направлении
        square_pos[0] += random.choice([-1, 1]) * square_speed
        square_pos[1] += random.choice([-1, 1]) * square_speed

        # Ограничиваем позицию квадрата в пределах окна
        square_pos[0] = max(0, min(square_pos[0], WIDTH - player_size))
        square_pos[1] = max(0, min(square_pos[1], HEIGHT - player_size))

        # Проверка на столкновение квадрата с полем
        if (
                square_pos[0] < 0
                or square_pos[0] > field_size - player_size
                or square_pos[1] < 0
                or square_pos[1] > field_size - player_size
        ):
            running = False

        # Движение поля вдоль оси X
        field_size += field_speed

        # Проверка на столкновение игрока с квадратом
        if (
                player_pos[0] < square_pos[0] < player_pos[0] + player_size
                and player_pos[1] < square_pos[1] < player_pos[1] + player_size
        ):
            score += 1

        # Проверка времени игры
        elapsed_time = (pygame.time.get_ticks() - start_time) / 1000
        time_remaining = max(0, game_duration - int(elapsed_time))
        if time_remaining <= 0:
            running = False

        # Очистка экрана
        screen.fill(RED)

        # Отрисовка игрока (поля вокруг квадрата)
        pygame.draw.rect(screen, WHITE, (player_pos[0], player_pos[1], player_size, player_size), 2)

        # Отрисовка квадрата (объекта, который двигается рандомно)
        pygame.draw.rect(screen, WHITE, (square_pos[0], square_pos[1], player_size, player_size))

        # Вывод счета на экран
        font = pygame.font.Font(None, 30)
        text = font.render(f"Score: {score}", True, WHITE)
        screen.blit(text, (10, 10))

        # Вывод времени игры на экран
        text = font.render(f"Time: {time_remaining}", True, WHITE)
        screen.blit(text, (10, 40))

        # Обновление экрана
        pygame.display.flip()

        # Установка FPS
        clock.tick(FPS)

# Запуск игры
take_aim_game()

pygame.quit()
sys.exit()
